package common

import . "github.com/hymkor/gmnlisp"

// This code is generated by lsp2go.lsp

// NewSymbol("set-nth"): embed_set_nth,
var embed_set_nth = &LispString{S: `(lambda (newvalue Z L) (set-elt newvalue L Z))`}

// NewSymbol("set-nthcdr"): embed_set_nthcdr,
var embed_set_nthcdr = &LispString{S: `(lambda (newvalue z source) (let ((s source)) (while s (setq z (1- z)) (if (zerop z) (set-cdr newvalue s)) (setq s (cdr s))) source))`}

// NewSymbol("set-cadr"): embed_set_cadr,
var embed_set_cadr = &LispString{S: `(lambda (newvalue L) (set-car newvalue (cdr L)))`}

// NewSymbol("set-caddr"): embed_set_caddr,
var embed_set_caddr = &LispString{S: `(lambda (newvalue L) (set-car newvalue (cdr (cdr L))))`}

// NewSymbol("set-cadddr"): embed_set_cadddr,
var embed_set_cadddr = &LispString{S: `(lambda (newvalue L) (set-car newvalue (cdr (cdr (cdr L)))))`}

// NewSymbol("set-cddr"): embed_set_cddr,
var embed_set_cddr = &LispString{S: `(lambda (newvalue L) (set-cdr newvalue (cdr L)))`}

// NewSymbol("set-cdddr"): embed_set_cdddr,
var embed_set_cdddr = &LispString{S: `(lambda (newvalue L) (set-cdr newvalue (cdr (cdr L))))`}
