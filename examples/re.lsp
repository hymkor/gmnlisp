(defun scan (pattern str)
  (let (m m1 start end sub)
    (when (setq m (=~i pattern str))
      (setq m1 (car m))
      (setq sub m1)
      (while (setq sub (cddr sub))
        (setq start (append start (list (car sub))))
        (setq end (append end (list (cadr sub)))))
      (list (car m1)
            (cadr m1)
            (convert start <general-vector>)
            (convert end <general-vector>)))))

(defun scan-to-strings (pattern str)
  (let (m m1)
    (when (setq m (=~ pattern str))
      (setq m1 (car m))
      (list (car m1)
            (convert (cdr m1) <general-vector>)))))

(defmacro demo (s)
  (format t "~s~%" s)
  `(format t "=> ~s~%~%" ,s))

(demo (scan "(a)*b" "xaaabd"))
(demo (scan-to-strings "([^b])*b" "aaabd"))
